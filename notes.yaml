Рекомендации по оформлению заданий:
  • Структура репозитория должна быть понятной;
  • По возможности использовать README.md с описанием репозитория и особенностями запуска программ;
  • Коментарии и README.md могут быть оформлены на русском или английском языке;
  • Код должен быть покрыт unit-тестами;
  • Контейнеризовать бинарники с параметрами запуска по умолчанию.

Задание:
  Необходимо создать сервис для хранения и подачи объявлений пользователями.
  Таким образом чтобы:
    • Пользователь мог создавать новые объявления
    • Пользователь мог редактировать и удалять только свои объявления
    • Все пользователи могли получить все объявления
    • Все пользователи могли выполнять следующие виды поиска по объявлениям:
      ◦ Все объявления
      ◦ Объявления определенного пользователя
      ◦ Объявления по тэгам
      ◦ Объявления созданные в определенное время
      ◦ Комбинации приведенных видов поиска
    • Пользователь мог запрашивать объявления, отсортированные в определенном порядке
    (например по дате, названию и тд.)
  Для хранения объявлений и данных пользователя использовать базе данных.
  Сервис должен предоставлять API, работающее поверх HTTP в формате JSON.

Основные требования по запуску сервиса:
  • Простая инструкция для запуска
  (в идеале — с возможностью запустить через docker-compose up, но это необязательно);
  • Как минимум 5 методов работы с объявлением:
    ◦ Создание нового объявления
    ◦ Редактирование объявления
    ◦ Удаление объявления
    ◦ Поиск объявлений по приведенным выше критериям
    ◦ Получение объявления по номеру
  • Валидация полей:
    - не больше 3 ссылок на фото,
    - описание не более 1000 символов,
    - название не больше 200 символов,
    - не более 5 тэгов;

  Если есть сомнения по деталям — решение принять самостоятельно,
  но в своём README.md рекомендуем выписать вопросы и принятые решения по ним.

Детали:
  Методы получения объявлений

• Обязательные поля в ответе:
  - название объявления,
  - цена,
  - ссылка на главное фото,
  - данные пользователя подавшего объявление;

• Опциональные поля (можно запросить, передав параметр fields):
  - описание,
  - ссылки на все фото.

Метод создания объявления:
  • Принимает все вышеперечисленные поля:
    - название,
    - описание,
    - несколько ссылок на фотографии (сами фото загружать никуда не требуется),
    - цена;
  • Возвращает ID созданного объявления и код результата (ошибка или успех).

Метод редактирования объявления:
  • Принимает набор полей с их значениями, которые необходимо обновить
  • Возвращает корректный статус результата выполнения операции, если возникла ошибка то и текст ошибки
  * Бонусные задания:
      • Полнотекстовый поиск по имени объявления и\или по основному тексту;
      • Юнит тесты: постарайтесь достичь покрытия в 70% и больше;
      • Архитектура сервиса описана в виде текста и/или диаграмм;
      • Документация: есть структурированное описание методов сервиса;
      • Настраиваемое логирование в:
        ◦ файл на диске
        ◦ консоль
        ◦ отдельное, специализированное хранилище
  * - Необязательная часть задания, но добавить больше условных баллов на последующем интервью
